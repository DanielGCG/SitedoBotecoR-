<main>
    <div class="container">
        <div id="mostrador-de-cookies">Você tem 0 cookies!</div>
        <div id="cps">0 cookie/s</div>
        <button id="cookie">
            <img src="/img/cookie.png" alt="Cookie" style="width: 105px; height: auto;">
        </button>

        <div class="popup" id="popup" style="display: none;">
            <p>Aumentar a chance de cookie duplo em 20%</p>
            <button id="comprar-upgrade"></button>
            <button id="fechar-popup">Fechar</button>
        </div>
    </div>

    <!-- Barra lateral esquerda -->
    <div id="barra-esquerda" class="barra-lateral">
        <h2>Upgrades de Click</h2>
        <div id="lista-upgrades"></div> <!-- Novo contêiner para upgrades -->
    </div>

    <!-- Barra lateral direita -->
    <div id="barra-direita" class="barra-lateral">
        <h2>Upgrade de Máquina</h2>
    </div>

    <!-- Indicador de chance no canto da tela -->
    <div id="indicador-chance">Chance de cookie duplo: 0%</div>

    <div id="versao-container">
        <div id="versao" class="versao">Versão: 1.1.0</div>
        <button id="reset" class="reset-btn">Resetar</button>
    </div>
</main>

<style>
    main {
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
    }

    .container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 20px;
        background-color: #f9f9f936;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    }

    #mostrador-de-cookies, #cps {
        font-family: Arial, sans-serif;
        font-size: 18px;
        color: #333;
    }

    button {
        background: none;
        border: none;
        padding: 0;
        cursor: url('/img/cursor-mao.png'), auto;
        user-select: none;
        -webkit-user-select: none;
        -webkit-touch-callout: none;
    }

    #indicador-chance {
        position: relative;
        top: 15px;
        background-color: #f9f9f936;
        padding: 10px;
        border-radius: 5px;
        font-family: Arial, sans-serif;
        font-size: 14px;
        color: #333;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

    .barra-lateral {
        position: fixed; /* Mantém as barras fixas nas laterais da tela */
        top: auto; /* Coloca as barras no topo da tela */
        width: 200px; /* Define a largura fixa */
        height: 85vh; /* Faz com que as barras cubram toda a altura da tela */
        background-color: rgba(0, 0, 0, 0.1); /* Cor de fundo para visibilidade */
        display: flex; /* Torna a barra flexível para alinhar o conteúdo */
        flex-direction: column; /* Empilha os itens verticalmente */
        align-items: flex-start; /* Alinha o conteúdo no topo */
        justify-content: center; /* Centraliza o conteúdo horizontalmente */
        padding-top: 10px; /* Adiciona um pequeno espaçamento no topo */
        pointer-events: auto; /* Permite interatividade */
    }

    #barra-esquerda {
        left: 0;
    }

    #barra-direita {
        right: 0;
    }

    #lista-upgrades {
        display: block; /* Alterado de flex para block */
        padding: 10px;
        margin-top: 20px; /* Adiciona espaçamento entre o título e a lista de upgrades */
    }

    .upgrade-item {
        background-color: rgba(238, 119, 119, 0.219);
        border: 2px solid #333;
        border-radius: 10px;
        padding: 15px;
        text-align: left;
        display: block; /* Alterado para empilhar verticalmente os itens */
        margin-bottom: 10px; /* Adiciona espaçamento entre os itens de upgrade */
    }

    .upgrade-item button {
        background-color: #4CAF50;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        cursor: pointer;
    }

    .upgrade-item button:hover {
        background-color: #45a049;
    }

    @media (max-width: 768px) {
        main {
            flex-direction: column;
        }

        .barra-lateral {
            position: relative;
            width: 100%; /* Ajustar para largura total no layout responsivo */
            height: auto; /* Permitir altura dinâmica */
            padding: 10px; /* Espaçamento interno */
        }

        #barra-esquerda {
            order: 1; /* Aparece logo após os cookies */
        }

        #barra-direita {
            order: 2; /* Aparece abaixo da esquerda */
        }
    }

    .popup {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: rgba(238, 119, 119, 0.219);
        border: 2px solid #333;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        text-align: center;
    }

    .popup button#fechar-popup {
        background-color: #f04;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: url('/img/cursor-mao.png'), auto;
        margin-top: 15px;
    }

    .popup button#fechar-popup:hover {
        background-color: #c03;
    }

    .popup button#comprar-upgrade {
        background-color: #4CAF50;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: url('/img/cursor-mao.png'), auto;
        margin-top: 15px;
    }

    .popup button#comprar-upgrade:hover {
        background-color: #45a049;
    }

    #versao-container {
        position: fixed;
        bottom: 10px;
        left: 10px;
        display: flex;
        align-items: center;
        gap: 5px; /* Espaço entre a versão e o botão */
    }

    .versao {
        font-family: Arial, sans-serif;
        font-size: 12px;
        color: #333;
    }

    .reset-btn {
        background-color: #f04;
        color: white;
        padding: 5px 10px; /* Tamanho pequeno */
        font-size: 10px; /* Tamanho de texto menor */
        border-radius: 5px;
        cursor: url('/img/cursor-mao.png'), auto;
    }

    .reset-btn:hover {
        background-color: #c03;
    }
</style>

<script>
    let quantidadeCookies = 0;
    let cliques = [];
    let chanceCookieDuplo = 0;
    let tempoConstancia = 0;         // Tempo em que a diferença de CPS é menor que 0.33
    const tempoJanela = 3000;        // Janela de tempo cálculo do CPS
    const intervaloAtualizacao = 50; // Atualiza o CPS a cada 50ms
    const quantParaUpgradeInicial = 10;             // Preço do primeiro upgrade
    let quantParaUpgrade = quantParaUpgradeInicial;
    let cpsAnterior = 0;

    // Função para resetar os valores para o padrão inicial
    function resetarValores() {
        quantidadeCookies = 0;
        chanceCookieDuplo = 0;
        quantParaUpgrade = quantParaUpgradeInicial;
        tempoConstancia = 0;
        atualizarIndicadorChance();
        localStorage.setItem("quantidadeCookies", quantidadeCookies);
        localStorage.setItem("chanceCookieDuplo", chanceCookieDuplo);
        localStorage.setItem("quantParaUpgrade", quantParaUpgrade);
        document.getElementById("mostrador-de-cookies").textContent = `Você tem ${quantidadeCookies} cookies!`;
    }

    // Carregar valores do Local Storage ao iniciar
    document.addEventListener("DOMContentLoaded", () => {
        const cookiesSalvos = localStorage.getItem("quantidadeCookies");
        if (cookiesSalvos !== null) {
            quantidadeCookies = parseInt(cookiesSalvos, 10);
            document.getElementById("mostrador-de-cookies").textContent = `Você tem ${quantidadeCookies} cookies!`;
        }

        const chanceSalva = localStorage.getItem("chanceCookieDuplo");
        if (chanceSalva !== null) {
            chanceCookieDuplo = parseInt(chanceSalva, 10);
            atualizarIndicadorChance();
        }

        const upgradeSalvo = localStorage.getItem("quantParaUpgrade");
        if (upgradeSalvo !== null) {
            quantParaUpgrade = parseInt(upgradeSalvo, 10);
        }
    });

    document.getElementById("cookie").addEventListener("click", () => {
        let multiplicador = 1;
        let chance = chanceCookieDuplo;

        while (chance >= 100) {
            multiplicador++;
            chance -= 100;
        }

        if (Math.random() * 100 <= chance) multiplicador++;

        quantidadeCookies += multiplicador;
        document.getElementById("mostrador-de-cookies").textContent = `Você tem ${quantidadeCookies} cookies!`;
        localStorage.setItem("quantidadeCookies", quantidadeCookies);
        atualizarCps();

        // Verifica se a quantidade de cookies é suficiente para o upgrade
        if (quantidadeCookies >= quantParaUpgrade) {
            if (!document.getElementById('lista-upgrades').innerHTML) {
                exibirOfertaUpgrade(); // Exibe a oferta de upgrade
            }
        }
    });

    function atualizarCps() {
        const cps = quantidadeCookies / tempoJanela;
        if (cps !== cpsAnterior) {
            tempoConstancia = 0;
            cpsAnterior = cps;
        }
    }

    // Exibição das ofertas de upgrade
    function exibirOfertaUpgrade() {
        const listaUpgrades = document.getElementById('lista-upgrades');
        const novoUpgrade = document.createElement('div');
        novoUpgrade.classList.add('upgrade-item');
        novoUpgrade.innerHTML = `
            <p>Aumentar chance de cookie duplo em 20%!</p>
            <button class="comprar-upgrade">Comprar por ${quantParaUpgrade} cookies</button>
        `;
        listaUpgrades.appendChild(novoUpgrade);
    }

    document.getElementById("comprar-upgrade").addEventListener("click", () => {
        if (quantidadeCookies >= quantParaUpgrade) {
            quantidadeCookies -= quantParaUpgrade;
            chanceCookieDuplo += 20;
            quantParaUpgrade *= 2; // Dobra o preço para o próximo upgrade
            localStorage.setItem("quantidadeCookies", quantidadeCookies);
            localStorage.setItem("chanceCookieDuplo", chanceCookieDuplo);
            atualizarIndicadorChance();
            document.getElementById("mostrador-de-cookies").textContent = `Você tem ${quantidadeCookies} cookies!`;
            document.getElementById('lista-upgrades').innerHTML = ''; // Remove a oferta de upgrade após compra
        }
    });

    document.getElementById("lista-upgrades").addEventListener("click", (e) => {
        if (e.target && e.target.classList.contains("comprar-upgrade")) {
            if (quantidadeCookies >= quantParaUpgrade) {
                quantidadeCookies -= quantParaUpgrade;
                chanceCookieDuplo += 20;
                quantParaUpgrade *= 2; // Dobra o preço para o próximo upgrade
                localStorage.setItem("quantidadeCookies", quantidadeCookies);
                localStorage.setItem("chanceCookieDuplo", chanceCookieDuplo);
                atualizarIndicadorChance();
                document.getElementById("mostrador-de-cookies").textContent = `Você tem ${quantidadeCookies} cookies!`;
                document.getElementById('lista-upgrades').innerHTML = ''; // Remove a oferta de upgrade após compra
            }
        }
    });

    function atualizarIndicadorChance() {
        document.getElementById("indicador-chance").textContent = `Chance de cookie duplo: ${chanceCookieDuplo}%`;
    }

    document.getElementById("reset").addEventListener("click", () => {
        // Pergunta ao usuário se ele deseja resetar o progresso
        const confirmarReset = confirm("Deseja mesmo resetar seu progresso?");
        
        // Se o usuário confirmar, chama a função para resetar os valores
        if (confirmarReset) {
            resetarValores();
        } else {
        }
    });

    document.getElementById("fechar-popup").addEventListener("click", () => {
        document.getElementById("popup").style.display = 'none';
    });
</script>
