<main>
    <div class="container">
        <div id="mostrador-de-cookies">Você tem 0 cookies!</div>
        <div id="cps">0 cookies/s</div>
        <button id="cookie">
            <img src="/img/cookie.png" alt="Cookie" style="width: 105px; height: auto;">
        </button>

        <div class="popup" id="popup" style="display: none;">
            <p>Aumentar a chance de cookie duplo em 20%</p>
            <button id="comprar-click"></button>
            <button id="fechar-popup">Fechar</button>
        </div>
    </div>

    <!-- Barra lateral esquerda -->
    <div id="barra-esquerda" class="barra-lateral">
        <h2>Upgrade de Click</h2>
        <div id="lista-click"></div>
    </div>

    <!-- Barra lateral direita -->
    <div id="barra-direita" class="barra-lateral">
        <h2>Upgrade de Máquina</h2>
        <div id="lista-maquina"></div>
    </div>

    <!-- Indicador de chance no canto da tela -->
    <div id="indicador-chance">Multiplicador Cookie: 0%</div>

    <div id="versao-container">
        <div id="versao" class="versao">Versão: 1.1.85</div>
        <button id="reset" class="reset-btn">Resetar</button>
    </div>
</main>

<style>
    main {
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
    }

    .container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 20px;
        background-color: #f9f9f936;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    }

    #cookie img {
        -webkit-user-drag: none;
        pointer-events: none;
    }

    #mostrador-de-cookies, #cps {
        font-family: Arial, sans-serif;
        font-size: 18px;
        color: #333;
    }

    button {
        background: none;
        border: none;
        padding: 0;
        cursor: url('/img/cursor-mao.png'), auto;
        user-select: none;
        -webkit-user-select: none;
        -webkit-touch-callout: none;
        transition: background-color 0.3s ease;
    }

    #indicador-chance {
        position: relative;
        top: 15px;
        background-color: #f9f9f936;
        padding: 10px;
        border-radius: 5px;
        font-family: Arial, sans-serif;
        font-size: 14px;
        color: #333;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

    .barra-lateral {
        position: fixed; /* Mantém as barras fixas nas laterais da tela */
        top: auto; /* Coloca as barras no topo da tela */
        width: 200px; /* Define a largura fixa */
        height: 85vh; /* Faz com que as barras cubram toda a altura da tela */
        background-color: rgba(0, 0, 0, 0.1); /* Cor de fundo para visibilidade */
        display: flex; /* Torna a barra flexível para alinhar o conteúdo */
        flex-direction: column; /* Empilha os itens verticalmente */
        align-items: flex-start; /* Alinha o conteúdo no topo */
        justify-content: center; /* Centraliza o conteúdo horizontalmente */
        padding-top: 10px; /* Adiciona um pequeno espaçamento no topo */
        pointer-events: auto; /* Permite interatividade */
    }

    #barra-esquerda {
        left: 0;
    }

    #barra-direita {
        right: 0;
    }

    #lista-click {
        display: block; /* Alterado de flex para block */
        padding: 10px;
        margin-top: 20px; /* Adiciona espaçamento entre o título e a lista de upgrades */
    }

    #lista-maquina {
        display: block; /* Alterado de flex para block */
        padding: 10px;
        margin-top: 20px; /* Adiciona espaçamento entre o título e a lista de upgrades */
    }

    .upgrade-item {
        background-color: rgba(238, 119, 119, 0.219);
        border: 2px solid #333;
        border-radius: 10px;
        padding: 15px;
        text-align: left;
        display: block; /* Alterado para empilhar verticalmente os itens */
        margin-bottom: 10px; /* Adiciona espaçamento entre os itens de upgrade */
    }

    .upgrade-item button {
        background-color: #4CAF50;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        cursor: url('/img/cursor-mao.png'), auto;
    }

    .upgrade-item button:hover {
        background-color: #45a049;
    }

    @media (max-width: 768px) {
        main {
            flex-direction: column;
        }

        .barra-lateral {
            position: relative;
            width: 100%; /* Ajustar para largura total no layout responsivo */
            height: auto; /* Permitir altura dinâmica */
            padding: 10px; /* Espaçamento interno */
        }

        #barra-esquerda {
            order: 1; /* Aparece logo após os cookies */
        }

        #barra-direita {
            order: 2; /* Aparece abaixo da esquerda */
        }
    }

    .popup {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: rgba(238, 119, 119, 0.219);
        border: 2px solid #333;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        text-align: center;
    }

    .popup button#fechar-popup {
        background-color: #f04;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: url('/img/cursor-mao.png'), auto;
        margin-top: 15px;
    }

    .popup button#fechar-popup:hover {
        background-color: #c03;
    }

    .popup button#comprar-click, .popup button#comprar-maquina {
        background-color: #4CAF50;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: url('/img/cursor-mao.png'), auto;
        margin-top: 15px;
    }

    .popup button#comprar-click:hover, .popup button#comprar-maquina:hover {
        background-color: #45a049;
    }

    #versao-container {
        position: fixed;
        bottom: 10px;
        left: 10px;
        display: flex;
        align-items: center;
        gap: 5px; /* Espaço entre a versão e o botão */
    }

    .versao {
        font-family: Arial, sans-serif;
        font-size: 12px;
        color: #333;
    }

    .reset-btn {
        background-color: #f04;
        color: white;
        padding: 5px 10px; /* Tamanho pequeno */
        font-size: 10px; /* Tamanho de texto menor */
        border-radius: 5px;
        cursor: url('/img/cursor-mao.png'), auto;
    }

    .reset-btn:hover {
        background-color: #c03;
    }
</style>

<script>
    let quantidadeCookies = 0;      // Variável para quantidade atual de cookies
    let multiplicadorCookie = 0;      // Variável para chance de cookie por click
    let cookiesPorSegundo = 0;      // Variável para cookies por segundo
    const precoClickInicial = 3;    // Preço inicial para upgrade de click
    let precoClick = precoClickInicial;
    const precoMaquinaInicial = 10; // Preço inicial para upgrade de máquina
    let precoMaquina = precoMaquinaInicial;
    let clickTimestamps = [];       // Armazena os timestamps dos cliques
    const CPS_INTERVAL = 3000;      // Janela de tempo para cálculo de CPS (3 segundos)



    // Função para resetar os valores para o padrão inicial
    function resetarValores() {
        quantidadeCookies = 0;
        multiplicadorCookie = 0;
        cookiesPorSegundo = 0;
        precoClick = precoClickInicial;
        precoMaquina = precoMaquinaInicial;

        // Atualizar elementos na interface
        atualizarIndicadorChance();
        document.getElementById("mostrador-de-cookies").textContent = `Você tem ${quantidadeCookies} cookies!`;
        document.getElementById("cps").textContent = `${cookiesPorSegundo.toFixed(1)} cookie/s`;

        // Limpar ofertas
        document.getElementById("lista-click").innerHTML = '';
        document.getElementById("lista-maquina").innerHTML = '';

        // Limpar armazenamento local
        localStorage.clear();
    }

    // Carregar valores do Local Storage ao iniciar
    document.addEventListener("DOMContentLoaded", () => {
        const cookiesSalvos = localStorage.getItem("quantidadeCookies");
        if (cookiesSalvos !== null) {
            quantidadeCookies = parseInt(cookiesSalvos, 10);
            document.getElementById("mostrador-de-cookies").textContent = `Você tem ${quantidadeCookies.toFixed(0)} cookies!`;
        }

        const chanceSalva = localStorage.getItem("multiplicadorCookie");
        if (chanceSalva !== null) {
            multiplicadorCookie = parseInt(chanceSalva, 10);
            atualizarIndicadorChance();
        }

        const upgradeClickSalvo = localStorage.getItem("precoClick");
        if (upgradeClickSalvo !== null) {
            precoClick = parseInt(upgradeClickSalvo, 10);
        }

        const upgradeMaquinaSalvo = localStorage.getItem("precoMaquina");
        if (upgradeMaquinaSalvo !== null) {
            precoMaquina = parseInt(upgradeMaquinaSalvo, 10);
        }

        const cpsSalvo = localStorage.getItem("cookiesPorSegundo");
        if (cpsSalvo !== null) {
            cookiesPorSegundo = parseInt(cpsSalvo, 10);
        }
    });

    document.getElementById("cookie").addEventListener("click", () => {
        const multiplicador = calcularMultiplicador(multiplicadorCookie);
        quantidadeCookies += multiplicador;

        // Armazena o timestamp atual
        clickTimestamps.push(Date.now());

        // Atualiza o contador e CPS
        document.getElementById("mostrador-de-cookies").textContent = `Você tem ${quantidadeCookies.toFixed(0)} cookies!`;
        localStorage.setItem("quantidadeCookies", quantidadeCookies);
        atualizarCps();

        // Verifica upgrades
        if (quantidadeCookies >= precoClick && !document.getElementById('lista-click').innerHTML) {
            exibirOfertaClick();
        }
        if (quantidadeCookies >= precoMaquina && !document.getElementById('lista-maquina').innerHTML) {
            exibirOfertaMaquina();
        }
    });

    function calcularMultiplicador(chance) {
        let multiplicador = 1;
        while (chance >= 100) {
            multiplicador++;
            chance -= 100;
        }
        return Math.random() * 100 <= chance ? multiplicador + 1 : multiplicador;
    }

    function calcularCpsMedia() {
        const agora = Date.now();

        // Filtra cliques dentro dos últimos 3 segundos
        clickTimestamps = clickTimestamps.filter(timestamp => agora - timestamp <= CPS_INTERVAL);

        // Retorna a média de cliques por segundo
        return clickTimestamps.length / (CPS_INTERVAL / 1000);
    }

    // Função para adicionar cookies automáticos ao total
    function adicionarCookiesAutomaticos() {
        quantidadeCookies += cookiesPorSegundo * calcularMultiplicador(multiplicadorCookie);
        document.getElementById("mostrador-de-cookies").textContent = `Você tem ${quantidadeCookies.toFixed(0)} cookies!`;
        localStorage.setItem("quantidadeCookies", Math.floor(quantidadeCookies)); // Atualiza o total de cookies no localStorage
    }

    // Adiciona os cookies da máquina a cada segundo
    setInterval(() => {
        adicionarCookiesAutomaticos();
    }, 1000); // A cada segundo


    function atualizarCps() {
        const cpsMediaClicks = calcularCpsMedia();
        const cpsTotal = cpsMediaClicks + cookiesPorSegundo * calcularMultiplicador(multiplicadorCookie); // Soma automática + média
        document.getElementById("cps").textContent = `${cpsTotal.toFixed(1)} cookies/s`;
    }

    // Atualiza monitor de cps
    setInterval(() => {
        atualizarCps(); // Atualiza a exibição do CPS
    }, 100);            // Atualiza a cada 50ms

    // Exibição das ofertas de upgrade
    function exibirOfertaClick() {
        const listaClicks = document.getElementById('lista-click');
        const novoClick = document.createElement('div');
        novoClick.classList.add('upgrade-item');
        novoClick.innerHTML = `
            <p>Aumentar multiplicador cookie em 20%!</p>
            <button class="comprar-click">Comprar por ${precoClick} cookies</button>
        `;
        listaClicks.appendChild(novoClick);
    }

    function exibirOfertaMaquina() {
        const listaMaquina = document.getElementById('lista-maquina');
        const novaMaquina = document.createElement('div');
        novaMaquina.classList.add('upgrade-item');
        novaMaquina.innerHTML = `
            <p>Aumentar produção automática de cookies em 80%!</p>
            <button class="comprar-maquina">Comprar por ${precoMaquina} cookies</button>
        `;
        listaMaquina.appendChild(novaMaquina);
    }

    // Ao comprar upgrade de click
    document.getElementById("lista-click").addEventListener("click", (e) => {
        if (e.target.classList.contains("comprar-click")) {
            if (quantidadeCookies >= precoClick) {
                quantidadeCookies -= precoClick;
                multiplicadorCookie += 20;
                precoClick = atualizarPreco(precoClick);
                localStorage.setItem("quantidadeCookies", quantidadeCookies);
                localStorage.setItem("multiplicadorCookie", multiplicadorCookie);
                localStorage.setItem("precoClick", precoClick); // Salva o novo preço do upgrade
                atualizarIndicadorChance();
                document.getElementById("mostrador-de-cookies").textContent = `Você tem ${quantidadeCookies.toFixed(0)} cookies!`;
                document.getElementById('lista-click').innerHTML = ''; // Remove a oferta de upgrade após compra
            }
        }
    });

    // Ao comprar upgrade de máquina
    document.getElementById("lista-maquina").addEventListener("click", (e) => {
        if (e.target && e.target.classList.contains("comprar-maquina")) {
            if (quantidadeCookies >= precoMaquina) {
                quantidadeCookies -= precoMaquina;
                cookiesPorSegundo += cookiesPorSegundo * 0.8 || 1; // Incrementa 80% ou começa com 1 cookie/s
                precoMaquina = atualizarPreco(precoMaquina);
                localStorage.setItem("quantidadeCookies", quantidadeCookies); // Salva a quantidade de cookies
                localStorage.setItem("cookiesPorSegundo", cookiesPorSegundo); // Salva o valor de CPS (cookies por segundo)
                localStorage.setItem("precoMaquina", precoMaquina);           // Salva o novo preço do upgrade
                document.getElementById("mostrador-de-cookies").textContent = `Você tem ${quantidadeCookies} cookies!`;
                document.getElementById('lista-maquina').innerHTML = ''; // Remove oferta
            }
        }
    });
    function atualizarIndicadorChance() {
        document.getElementById("indicador-chance").textContent = `Multiplicador cookie: ${multiplicadorCookie}%`;
    }

    function atualizarPreco(upgrade) {
        return upgrade * 2;
    }

    document.getElementById("reset").addEventListener("click", () => {
        if (confirm("Você tem certeza que quer resetar? Todo o progresso será perdido.")) {
            resetarValores();
        }
    });

    document.getElementById("fechar-popup").addEventListener("click", () => {
        document.getElementById("popup").style.display = 'none';
    });
</script>