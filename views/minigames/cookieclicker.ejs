<main>
    <div class="container">
        <div id="mostrador-de-cookies">Você tem 0 cookies!</div>
        <div id="cps">CPS: 0</div>
        <button id="cookie">
            <img src="/img/cookie.png" alt="Cookie" style="width: 105px; height: auto;">
        </button>

        <div class="popup" id="popup" style="display: none;">
            <p>Aumentar a chance de cookie duplo em 20%</p>
            <p id="chance-atual">Chance atual: 0%</p>
            <p id="nova-chance">Nova chance: 20%</p>
            <button id="comprar-upgrade"></button>
            <button id="fechar-popup">Fechar</button>
        </div>
    </div>

    <!-- Indicador de chance no canto da tela -->
    <div id="indicador-chance">Chance de cookie duplo: 0%</div>
</main>

<style>
    main {
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 20px;
        background-color: #f9f9f936;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    }

    #mostrador-de-cookies, #cps {
        font-family: Arial, sans-serif;
        font-size: 18px;
        color: #333;
    }

    button {
        background: none;
        border: none;
        padding: 0;
        cursor: url('/img/cursor-mao.png'), auto;
        user-select: none;
        -webkit-user-select: none;
        -webkit-touch-callout: none;
    }

    #indicador-chance {
        position: relative;
        top: 15px;
        background-color: #f9f9f936;
        padding: 10px;
        border-radius: 5px;
        font-family: Arial, sans-serif;
        font-size: 14px;
        color: #333;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

    /* Definição da animação bounce */
    @keyframes bounce {
        0%, 20%, 50%, 80%, 100% {
            transform: translateY(0);
        }
        40% {
            transform: translateY(-30px);
        }
        60% {
            transform: translateY(-15px);
        }
    }

    #cookie:active {
        animation: bounce 0.3s;
    }

    .popup {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: rgba(238, 119, 119, 0.219);
        border: 2px solid #333;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        text-align: center;
    }

    .popup button#fechar-popup {
        background-color: #f04;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: url('/img/cursor-mao.png'), auto;
        margin-top: 15px;
    }

    .popup button#fechar-popup:hover {
        background-color: #c03;
    }

    .popup button#comprar-upgrade {
        background-color: #4CAF50;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: url('/img/cursor-mao.png'), auto;
        margin-top: 15px;
    }

    .popup button#comprar-upgrade:hover {
        background-color: #45a049;
    }
</style>

<script>
    let quantidadeCookies = 0;
    let cliques = [];
    let chanceCookieDuplo = 0;
    let tempoConstancia = 0; // Tempo em que a diferença de CPS é menor que 0.33
    const tempoJanela = 3000;
    const intervaloAtualizacao = 50; // Atualiza o CPS a cada 50ms
    const quantParaUpgradeInicial = 500;
    let quantParaUpgrade = quantParaUpgradeInicial;
    let cpsAnterior = 0;

    // Função para resetar os valores para o padrão inicial
    function resetarValores() {
        quantidadeCookies = 0;
        chanceCookieDuplo = 0;
        quantParaUpgrade = quantParaUpgradeInicial;
        tempoConstancia = 0;
        atualizarIndicadorChance();
        localStorage.setItem("quantidadeCookies", quantidadeCookies);
        localStorage.setItem("chanceCookieDuplo", chanceCookieDuplo);
        localStorage.setItem("quantParaUpgrade", quantParaUpgrade);
    }

    // Carregar valores do Local Storage ao iniciar
    document.addEventListener("DOMContentLoaded", () => {
        const cookiesSalvos = localStorage.getItem("quantidadeCookies");
        if (cookiesSalvos !== null) {
            quantidadeCookies = parseInt(cookiesSalvos, 10);
            document.getElementById("mostrador-de-cookies").textContent = `Você tem ${quantidadeCookies} cookies!`;
        }

        const chanceSalva = localStorage.getItem("chanceCookieDuplo");
        if (chanceSalva !== null) {
            chanceCookieDuplo = parseInt(chanceSalva, 10);
            atualizarIndicadorChance();
        }

        const upgradeSalvo = localStorage.getItem("quantParaUpgrade");
        if (upgradeSalvo !== null) {
            quantParaUpgrade = parseInt(upgradeSalvo, 10);
        }
    });

    document.getElementById("cookie").addEventListener("click", () => {
        let multiplicador = 1;
        let chance = chanceCookieDuplo;

        while (chance >= 100) {
            multiplicador++;
            chance -= 100;
        }

        if (Math.random() < chance / 100) {
            multiplicador++;
        }

        quantidadeCookies += multiplicador;
        document.getElementById("mostrador-de-cookies").textContent = `Você tem ${quantidadeCookies} cookies!`;
        cliques.push(Date.now());
        localStorage.setItem("quantidadeCookies", quantidadeCookies);

        if (quantidadeCookies >= quantParaUpgrade) {
            mostrarPopup();
        }
    });

    function calcularCPS() {
        cliques = cliques.filter(timestamp => Date.now() - timestamp <= tempoJanela);
        const cps = cliques.length / (tempoJanela / 1000);
        const diferencaCPS = Math.abs(cps - cpsAnterior);

        if (diferencaCPS < 0.33) {
            tempoConstancia += intervaloAtualizacao;
        } else {
            tempoConstancia = 0;
        }

        // Se a constância for maior que 6 segundos ou o CPS for alto, punir o jogador
        if ((cps >= 15 && cps >=1) || tempoConstancia >= 6000) {
            if (tempoConstancia >= 6000) {
                alert("PARE DE ROUBAR SEU BOBÃO!\nPerdeu todo seu progresso HAHAHAH");
                resetarValores(); // Resetar valores ao ser punido
            }
        }

        cpsAnterior = cps;
        document.getElementById("cps").textContent = `CPS: ${cps.toFixed(2)}`;
        const vermelho = Math.min(Math.round(cps * 10), 255);
        let verde = 181;
        let azul = 107;

        if (vermelho === 255) {
            verde = Math.max(181 - (vermelho - 255) * 30, 0);
            azul = Math.max(107 - (vermelho - 255) * 30, 0);
        }

        document.body.style.backgroundColor = `rgb(${vermelho + 128}, ${verde}, ${azul})`;
    }

    function mostrarPopup() {
        const popup = document.getElementById("popup");
        document.getElementById("chance-atual").textContent = `Chance atual: ${chanceCookieDuplo}%`;
        document.getElementById("nova-chance").textContent = `Nova chance: ${chanceCookieDuplo + 20}%`;
        document.getElementById("comprar-upgrade").textContent = `${quantParaUpgrade} cookies`;
        popup.style.display = "block";
    }

    function atualizarIndicadorChance() {
        document.getElementById("indicador-chance").textContent = `Chance de cookie duplo: ${chanceCookieDuplo}%`;
    }

    document.getElementById("fechar-popup").addEventListener("click", () => {
        const popup = document.getElementById("popup");
        popup.style.display = "none";
    });

    document.getElementById("comprar-upgrade").addEventListener("click", () => {
        if (quantidadeCookies >= quantParaUpgrade) {
            quantidadeCookies -= quantParaUpgrade;
            chanceCookieDuplo += 20;
            quantParaUpgrade *= 2;
            document.getElementById("mostrador-de-cookies").textContent = `Você tem ${quantidadeCookies} cookies!`;
            document.getElementById("popup").style.display = "none";
            atualizarIndicadorChance();

            localStorage.setItem("quantidadeCookies", quantidadeCookies);
            localStorage.setItem("chanceCookieDuplo", chanceCookieDuplo);
            localStorage.setItem("quantParaUpgrade", quantParaUpgrade);
        } else {
            alert("Você não tem cookies suficientes para comprar este upgrade!");
        }
    });

    calcularCPS();
    atualizarIndicadorChance();
    setInterval(calcularCPS, intervaloAtualizacao);

    document.getElementById("cookie").addEventListener('dragstart', (event) => {
        event.preventDefault();
    });
</script>
