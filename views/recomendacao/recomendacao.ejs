<main>
    <h2 style="text-align: center;">Filme da Galera</h2>
    <div class="caixa-texto">
        <h4>Obras que s√£o muito a gente!</h4>
        <h5>responda aqui para participar</h5>
        <a class="branco" href="/recomendacao/questionario">Question√°rio</a>
    </div>

    <div class="formulario">
        <table>
            <thead>
                <tr>
                    <th>Obras</th>
                    <th>Pessoas</th>
                </tr>
            </thead>
            <tbody id="listaFilmes">
                <!-- A linha para adicionar filme/s√©rie ser√° gerada dinamicamente -->
            </tbody>
        </table>
    </div>
    <div id="mensagem" style="display: none;"></div> <!-- Adicionando a div para mensagens -->
</main>

<link rel="stylesheet" href="/css/lista.css">

<style>
    main {
        text-align: center;
    }

    .caixa-texto h5 {
        margin-bottom: 20px; /* Espa√ßo entre o texto e o bot√£o */
    }

    /* Estilo para o bot√£o (agora um link) */
    .branco {
        display: inline-block; /* Necess√°rio para comportar margens como um bot√£o */
        padding: 10px 20px;
        background-color: white; /* Branco */
        color: #333; /* Cor do texto */
        border: 1px solid #ccc; /* Borda clara */
        border-radius: 5px;
        text-decoration: none; /* Remove o sublinhado padr√£o dos links */
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .branco:hover {
        background-color: #f1f1f1; /* Tom mais claro no hover */
        cursor: url('/img/cursor-mao.png'), auto;
    }
</style>

<script type="module">
import { getStorage, ref, uploadBytes, getDownloadURL, listAll } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-storage.js";
import { initializeApp } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-app.js";


// Configura√ß√£o do Firebase
const firebaseConfig = {
    apiKey: "AIzaSyDuwnu2XcSTJ1YZkgD4570AtE6uKci_nDQ",
    authDomain: "boteco-6fcfa.firebaseapp.com",
    projectId: "boteco-6fcfa",
    storageBucket: "boteco-6fcfa.appspot.com",
    messagingSenderId: "531032694476",
    appId: "1:531032694476:web:6e03bdd824b90fd2b2ec69"
};

const app = initializeApp(firebaseConfig);
const storage = getStorage(app);

// Array para manter o estado local dos filmes
let filmesLocais = [];

async function uploadFile() {
    const fileInput = document.getElementById('fileInput');
    const nomeFilmeInput = document.getElementById('nomeFilme');
    const nomeFilme = nomeFilmeInput.value.trim();

    if (fileInput.files.length === 0) {
        exibirMensagem('Por favor, selecione um arquivo!', 'error');
        return;
    }

    const file = fileInput.files[0];
    if (!file.type.startsWith('image/')) {
        exibirMensagem('Por favor, selecione um arquivo de imagem v√°lido!', 'error');
        return;
    }

    const imageName = `${nomeFilme}.png`;
    const imagePath = `listaFilmes/${imageName}`;
    const imageRef = ref(storage, imagePath);

    try {
        const snapshot = await uploadBytes(imageRef, file);
        const downloadURL = await getDownloadURL(snapshot.ref);
        
        exibirMensagem('Arquivo enviado com sucesso!', 'success');

        // Atualize o estado local e a interface
        filmesLocais.push({ nome: nomeFilme, url: downloadURL });
        adicionarItemLista(downloadURL, nomeFilme);
        
        fileInput.value = '';
        nomeFilmeInput.value = '';

        // Retorna o bot√£o ao estado padr√£o
        document.getElementById('labelFileInput').textContent = 'üìÅ Adicione imagem';

    } catch (error) {
        console.error('Erro ao enviar o arquivo:', error);
        exibirMensagem('Erro ao enviar o arquivo. Verifique a conex√£o e tente novamente.', 'error');
    }
}


function exibirMensagem(mensagem, tipo) {
    const mensagemDiv = document.getElementById('mensagem');
    mensagemDiv.textContent = mensagem;
    mensagemDiv.className = tipo === 'success' ? 'success' : 'error';
    mensagemDiv.style.display = 'block';

    setTimeout(() => {
        mensagemDiv.style.display = 'none';
    }, 5000);
}

function adicionarItemLista(url, vetorNomes) {
    const listaFilmes = document.getElementById('listaFilmes');
    const item = document.createElement('tr');
    
    item.innerHTML = `
        <td style="text-align: center;">
            ${vetorNomes}
            <img src="${url}">
        </td>
        <td>${vetorNomes}</td>
    `;
    listaFilmes.appendChild(item);
}

async function listarFilmes() {
    const listaFilmesRef = ref(storage, 'recomendacoes/imagensfilmes');
    const listaFilmes = document.getElementById('imagensfilmes');

    // Criar a linha para adicionar novo filme/s√©rie
    const linhaAdicionar = document.createElement('tr');

    try {
        const result = await listAll(listaFilmesRef);

        await Promise.all(result.items.map(async (itemRef) => {
            const nomeFilme = itemRef.name.replace('.png', '');
            const imageURL = await getDownloadURL(itemRef);
            
            filmesLocais.push({ nome: nomeFilme, url: imageURL });
            adicionarItemLista(imageURL, nomeFilme);
        }));

        if (filmesLocais.length === 0) {
            exibirMensagem('Nenhum filme encontrado. Adicione novos filmes para come√ßar!', 'info');
        }

    } catch (error) {
        console.error('Erro ao listar filmes:', error);
        exibirMensagem('Erro ao listar filmes. Tente novamente.', 'error');
    }
}


// Expondo as fun√ß√µes para serem usadas no HTML
window.uploadFile = uploadFile;
window.exibirMensagem = exibirMensagem;
window.adicionarItemLista = adicionarItemLista;
window.listarFilmes = listarFilmes;

listarFilmes();
</script>
</body>