<main>
    <h2 style="text-align: center;">Filme da Galera üçø</h2>
    <div class="caixas">
        <div class="caixa-texto">
            <h4>Fa√ßa agora o question√°rio</h4>
            <h5>responda aqui e participe!</h5>
            <a class="branco" href="/recomendacao/questionario">Question√°rio</a>
        </div>
        <div class="caixa-texto">
            <h4>Veja seu match cinematogr√°fico</h4>
            <h5>compare-se com os outros!</h5>
            <a class="branco" href="/recomendacao/match">Match!</a>
        </div>
    </div class="formulario">
        <table>
            <thead>
                <tr>
                    <th>Capa</th>
                    <th>Nota Atual</th>
                </tr>
            </thead>
            <tbody id="listaFilmes">
                <tr>
                    <td>
                      <img src="/img/recomendacao/1.png" alt="Minha M√£e √© uma Pe√ßa">
                    </td>
                    <td>
                      
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <img src="/img/recomendacao/2.png" alt="At√© que a sorte nos separe">
                    </td>
                    <td>
                      
                    </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/3.png" alt="P√¢nico">
                      </td>
                      <td>
                        
                      </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/4.png" alt="IT: A coisa">
                      </td>
                      <td>
                        
                      </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/5.png" alt="Vingadores">
                      </td>
                      <td>
                        
                      </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/6.png" alt="Velozes e Furiosos">
                      </td>
                      <td>
                        
                      </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/7.png" alt="Jumanji">
                      </td>
                      <td>
                        
                      </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/8.png" alt="Avatar">
                      </td>
                      <td>
                        
                      </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/9.png" alt="Star Wars">
                      </td>
                      <td>
                        
                      </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/10.png" alt="Interestelar">
                      </td>
                      <td>
                        
                      </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/11.png" alt="Lala Land">
                      </td>
                      <td>
                        
                      </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/12.png" alt="Crep√∫sculo">
                      </td>
                      <td>
                        
                      </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/13.png" alt="Homem-Aranha: Aranhaverso">
                      </td>
                      <td>
                        
                      </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/14.png" alt="Shrek">
                      </td>
                      <td>
                        
                      </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/15.png" alt="A Vida √© Bela">
                      </td>
                      <td>
                        
                      </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/16.png" alt="Euphoria">
                      </td>
                      <td>
                        
                      </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/17.png" alt="Turma da M√¥nica">
                      </td>
                      <td>
                        
                      </td>
                  </tr>
                  <tr>
                      <td>
                        <img src="/img/recomendacao/18.png" alt="Procurando Nemo">
                      </td>
                      <td>
                        
                  </tr>
            </tbody>
        </table>
    </div>
</main>

<link rel="stylesheet" href="/css/lista.css">

<style>
    main {
        text-align: center;
    }

    /* Container para as caixas de texto */
    .caixas {
        display: flex;
        justify-content: space-between;
        /* Para espa√ßar as caixas na horizontal */
        gap: 30px;
        /* Dist√¢ncia entre as caixas de texto */
        flex-wrap: wrap;
        /* Permite que as caixas "quebrem" em dispositivos m√≥veis */
        margin-top: 20px;
    }

    /* Ajuste das caixas de texto */
    .caixa-texto {
        flex: 1;
        min-width: 280px;
        /* Tamanho m√≠nimo para que as caixas n√£o fiquem muito pequenas */
    }

    /* Estilo para o t√≠tulo */
    .caixa-texto h4 {
        margin-bottom: 10px;
    }

    .caixa-texto h5 {
        margin-bottom: 20px;
    }

    /* Estilo para o link/bot√£o */
    .branco {
        display: inline-block;
        padding: 10px 20px;
        background-color: white;
        color: #333;
        border: 1px solid #ccc;
        border-radius: 5px;
        text-decoration: none;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    /* Hover do link */
    .branco:hover {
        background-color: #f1f1f1;
        cursor: url('/img/cursor-mao.png'), auto;
    }

    /* Responsividade para dispositivos m√≥veis */
    @media (max-width: 768px) {
        .caixas {
            flex-direction: column;
            /* Empilha as caixas uma sobre a outra em dispositivos m√≥veis */
            gap: 15px;
            /* Menor dist√¢ncia entre elas no mobile */
        }
    }
</style>

<script type="module">
    import { getStorage, ref, uploadBytes, getDownloadURL, listAll } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-storage.js";
    import { initializeApp } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-app.js";


    // Configura√ß√£o do Firebase
    const firebaseConfig = {
        apiKey: "AIzaSyDuwnu2XcSTJ1YZkgD4570AtE6uKci_nDQ",
        authDomain: "boteco-6fcfa.firebaseapp.com",
        projectId: "boteco-6fcfa",
        storageBucket: "boteco-6fcfa.appspot.com",
        messagingSenderId: "531032694476",
        appId: "1:531032694476:web:6e03bdd824b90fd2b2ec69"
    };

    const app = initializeApp(firebaseConfig);
    const storage = getStorage(app);

    // Array para manter o estado local dos filmes
    let filmesLocais = [];

    
    async function geraPorcentagemFilmes() {
        const listaUsuariosRef = ref(storage, 'recomendacoes/usuarios');
        const totalFilmes = 18; // Quantidade de filmes na lista
        const somaNotas = Array(totalFilmes).fill(0); // Array para somar as notas de cada filme
        let totalUsuarios = 0; // Contador para o n√∫mero de usu√°rios

        try {
            const result = await listAll(listaUsuariosRef);
            const arquivosUsuarios = result.items;

            // Processa cada arquivo de usu√°rio
            await Promise.all(
                arquivosUsuarios.map(async (arquivoRef) => {
                    const arquivoURL = await getDownloadURL(arquivoRef);
                    const response = await fetch(arquivoURL);
                    const texto = await response.text();

                    // Extrai as notas do arquivo do usu√°rio
                    const linhas = texto.split('\n').filter(Boolean); // Divide o texto por linhas
                    const notas = JSON.parse(linhas[1]); // Pega a segunda linha como JSON das notas

                    // Soma as notas de cada filme
                    notas.forEach((nota, index) => {
                        somaNotas[index] += nota;
                    });

                    totalUsuarios++;
                })
            );

            // Calcula a porcentagem para cada filme
            const porcentagens = somaNotas.map((soma) => parseFloat(((soma / (totalUsuarios * 10)) * 10).toFixed(1)));

            // Preenche a tabela com as porcentagens
            preencherPorcentagens(porcentagens);

            console.log('Porcentagens calculadas:', porcentagens);
        } catch (error) {
            console.error('Erro ao gerar porcentagem dos filmes:', error);
        }
    }


    function ordenaFilmes(lista) {
        return lista.sort((a, b) => {
            // Tenta converter os nomes para n√∫meros
            const numA = parseInt(a.nome, 10);
            const numB = parseInt(b.nome, 10);

            // Se ambos forem n√∫meros, ordena como n√∫meros
            if (!isNaN(numA) && !isNaN(numB)) {
                return numA - numB;
            }

            // Caso contr√°rio, ordena como strings
            return a.nome.localeCompare(b.nome);
        });
    }

    /*precisamos gerar o vetor de nomes de cada elemento antes de printar*/
    async function listarFilmes() {
        const listaFilmesRef = ref(storage, 'recomendacoes/imagensfilmes');
        const listaFilmes = document.getElementById('listaFilmes');

        listaFilmes.innerHTML = ""; // Limpa a tabela antes de re-renderizar

        try {
            const result = await listAll(listaFilmesRef);

            filmesLocais = []; // Resetar o array local antes de adicionar novos itens

            await Promise.all(result.items.map(async (itemRef) => {
                const nomeFilme = itemRef.name.replace('.png', ''); // Remove a extens√£o do arquivo
                const imageURL = await getDownloadURL(itemRef);

                filmesLocais.push({ nome: nomeFilme, url: imageURL });
            }));

            // Ordenar os filmes antes de exibir
            filmesLocais = ordenaFilmes(filmesLocais);

            // Re-adicionar os filmes ordenados na tabela
            filmesLocais.forEach((filme) => {
                adicionarItemLista(filme.url, filme.nome, filme.vetorNomes);
            });

            if (filmesLocais.length === 0) {
                exibirMensagem('Nenhum filme encontrado. Adicione novos filmes para come√ßar!', 'info');
            }

        } catch (error) {
            console.error('Erro ao listar filmes:', error);
            exibirMensagem('Erro ao listar filmes. Tente novamente.', 'error');
        }
    }

    function adicionarItemLista(url, nome, vetorNomes) {
        const listaFilmes = document.getElementById('listaFilmes');
        const item = document.createElement('tr');

        item.innerHTML = `
        <td style="text-align: center;">
            ${nome}
            <img src="${url}">
        </td>
        <td>${nome}</td>
    `;
        listaFilmes.appendChild(item);
    }


    // Fun√ß√£o para preencher as porcentagens na tabela
    function preencherPorcentagens(vetor) {
        // Seleciona todas as c√©lulas <td> correspondentes √† porcentagem
        const celulasPorcentagem = document.querySelectorAll('#listaFilmes tr td:last-child');
        
        // Itera sobre as c√©lulas e o vetor ao mesmo tempo
        vetor.forEach((valor, index) => {
            if (index < celulasPorcentagem.length) {
                celulasPorcentagem[index].textContent = `${valor}`; // Adiciona o valor com o s√≠mbolo de porcentagem
            }
        });
    }

    geraPorcentagemFilmes();

    // Expondo as fun√ß√µes para serem usadas no HTML
    window.adicionarItemLista = adicionarItemLista;
</script>
</body>