<main>
    <h2>Cutuque algu√©m!</h2>

    <div class="caixa-texto">
        <h4>Para cutucar no Twitter</h4>
        <h5>Use o @dapessoa e escreva uma mensagem ~an√¥nima!~</h5>
    </div>

    <div class="caixa-texto">
        <div class="twitter-draft-container">
            <div class="header">
                <img src="pages/cutucar/user-avatar.png" class="avatar">
                <span class="username">@botdoboteco</span>
            </div>
            <!-- Campo de texto para o @mencionado -->
            <input class="tweet-input" type="text" id="mention" placeholder="Digite @cutucado" autocomplete="off" />

            <!-- Div para mostrar sugest√µes -->
            <div id="suggestions" class="suggestions"></div>
            
            <!-- Campo de texto -->
            <textarea class="tweet-input-grande" id="messageText" placeholder="resto da mensagem..." maxlength="220"></textarea>
            <div id="char-count" class="char-count">
                <span id="char-count-text">0/220</span>
            </div>

            <!-- Preview de M√≠dia -->
            <div id="media-preview" class="media-preview">
            </div>

            <div class="twitter-draft-footer">
                <div class="twitter-draft-footer-midia">
                    <!-- Bot√£o para fazer upload de m√≠dia -->
                    <div class="upload-container">
                        <label for="mediaFile" style="cursor: url('/img/cursor-mao.png'), auto;">
                            <svg xmlns="http://www.w3.org/2000/svg" 
                                viewBox="0 0 24 24" 
                                fill="#1D9BF0"
                                width="24" 
                                height="24"
                                aria-hidden="false">
                                <path d="M3 5.5C3 4.119 4.119 3 5.5 3h13C19.881 3 21 4.119 21 5.5v13c0 1.381-1.119 2.5-2.5 2.5h-13C4.119 21 3 19.881 3 18.5v-13zM5.5 5c-.276 0-.5.224-.5.5v9.086l3-3 3 3 5-5 3 3V5.5c0-.276-.224-.5-.5-.5h-13zM19 15.414l-3-3-5 5-3-3-3 3V18.5c0 .276.224.5.5.5h13c.276 0 .5-.224.5-.5v-3.086zM9.75 7C8.784 7 8 7.784 8 8.75s.784 1.75 1.75 1.75 1.75-.784 1.75-1.75S10.716 7 9.75 7z"></path>
                            </svg>
                        </label>
                        <input type="file" id="mediaFile" accept="image/*,video/*" style="display: none;" onchange="previewMedia()" />
                    </div>
            
                    <!-- Bot√£o para fazer upload de gif -->
                    <div class="upload-container">
                        <label for="selectGifButton" style="cursor: url('/img/cursor-mao.png'), auto;">
                            <svg xmlns="http://www.w3.org/2000/svg" 
                                viewBox="0 0 24 24" 
                                fill="#1D9BF0"
                                width="24" 
                                height="24"
                                aria-hidden="false">
                                <path d="M3 5.5C3 4.119 4.12 3 5.5 3h13C19.88 3 21 4.119 21 5.5v13c0 1.381-1.12 2.5-2.5 2.5h-13C4.12 21 3 19.881 3 18.5v-13zM5.5 5c-.28 0-.5.224-.5.5v13c0 .276.22.5.5.5h13c.28 0 .5-.224.5-.5v-13c0-.276-.22-.5-.5-.5h-13zM18 10.711V9.25h-3.74v5.5h1.44v-1.719h1.7V11.57h-1.7v-.859H18zM11.79 9.25h1.44v5.5h-1.44v-5.5zm-3.07 1.375c.34 0 .77.172 1.02.43l1.03-.86c-.51-.601-1.28-.945-2.05-.945C7.19 9.25 6 10.453 6 12s1.19 2.75 2.72 2.75c.85 0 1.54-.344 2.05-.945v-2.149H8.38v1.032H9.4v.515c-.17.086-.42.172-.68.172-.76 0-1.36-.602-1.36-1.375 0-.688.6-1.375 1.36-1.375z"></path>
                            </svg>
                            <button id="selectGifButton" style="display: none;"></button>
                        </label>
                    </div>
            
                    <!-- Bot√£o para imagem brat -->
                    <div class="upload-container" style="display: flex; justify-content: center; align-items: center; height: 40px;">
                        <label for="bratButton" style="cursor: url('/img/cursor-mao.png'), auto;">
                            <img src="pages/cutucar/brat.png" style="width: 20px; height: 20px; border-radius: 3px;">
                            <button id="bratButton" style="display: none;" onclick="enableBrat();"></button>
                        </label>
                    </div>
                </div>
            
                <!-- Bot√£o para enviar o tweet -->
                <button id="tweetButton" class="post-button">Cutucar</button>
            </div>
        </div>
    </div>

    <!-- Popup para exibir a imagem com fundo desfocado e bot√µes -->
    <div id="popup-senha" class="popup" style="display: none;">
        <div id="popup-conteudo" class="popup-conteudo">
            <div class="acoes">
                <form id="passwordForm">
                    <h2>Autentica√ß√£o de Usu√°rio</h2>
                    <input type="password" id="password" placeholder="Digite a senha" />
                    <button onclick="event.preventDefault(), checkPassword()">Verificar</button>
                    <p class="message" id="message"></p>
                </form>
            </div>
        </div>
    </div>

    <!-- Popup para exibir a imagem com fundo desfocado e bot√µes -->
    <div id="popup-gif" class="popup-gif" style="display: none;">
        <div id="popup-gif-conteudo" class="popup-gif-conteudo">
            <div id="popup-gif-gifs">
            </div>
        <div class="acoes">
            <button class="branco" onclick="fecharPopup()">Fechar</button>
        </div>
    </div>
    
</main>

<link rel="stylesheet" href="/geral/popup.css">
<link rel="stylesheet" href="/pages/cutucar/cutucar.css">
<link rel="stylesheet" href="/pages/cutucar/twitter-post.css">

<!-- --- CONSTANTES --- -->
<script src="/pages/cutucar/constants.js"></script>
<!-- --- L√ìGICA PARA OS GIFS --- -->
<script src="/pages/cutucar/gifs.js" defer></script>
<!-- --- L√ìGICA PARA BRAT --- -->
<script src="/pages/cutucar/brat.js" defer></script>
<!-- --- L√ìGICA PARA AUTENTICA√á√ÉO DO USU√ÅRIO --- -->
<script src="/pages/cutucar/autentication.js" defer></script>

<script>
    /* ----- Vari√°veis ----- */
    let bratEnabled = false;

    /* ----- L√ìGICA PARA O POST ----- */
    // L√≥gica para envio de tweet
    document.getElementById('tweetButton').addEventListener('click', async () => {
        if (localStorage.getItem("validacaoUsuario") !== "true" && localStorage.getItem("validacaoUsuario") !== true) {
            alert("Usu√°rio sem permiss√£o para envio de tweet");
            return false;
        }

        if (!checkUserLastCutucadaTime()) {
            alert("Calma calabreso! Est√° cutucando muito r√°pido!");
            return false;
        }
        
        const mention = mentionInput.value.trim();
        const messageText = document.getElementById('messageText').value.trim();
        const mediaFile = document.getElementById('mediaFile').files[0];

        if (!mention || !(messageText || mediaFile)) {
            alert('Por favor, preencha ambos os campos.');
            return;
        }


        const tweetText = `‚òù${mention}, ${messageText}

üîóhttps://www.botecors.me/cutucar`;

        const formData = new FormData();

        if (!bratEnabled){
            formData.append('text', tweetText);
        }

        if (mediaFile) {
            formData.append('media', mediaFile); // Adicionar m√≠dia somente se for enviada
        }

        OnLoadingScreen();

        try {
            // Captura o IP do usu√°rio usando a API ipify
            const ipResponse = await fetch('https://api.ipify.org?format=json');
            const ipData = await ipResponse.json();
            const userIp = ipData.ip; // O IP do usu√°rio

            formData.append('userIp', userIp); // Inclui o IP na requisi√ß√£o para o backend

            const response = await fetch('/API/cutucar/tweet-media', {
                method: 'POST',
                body: formData,
            });
            
            const data = await response.json();

            if (data.status === 429) {
                alert('Limite de requisi√ß√µes atingido. Por favor, tente novamente mais tarde.');
                return;
            }

            if (data.success) {
                alert('Tweet enviado com sucesso!');
                clearMidiaInput();
                clearMessageTextInput();
                clearMentionInput();
                previewMedia();
                OffLoadingScreen();
                // Marcamos quando tentamos uma cutucada
                setLastCutucadaTime();
            } else {
                if (data.message === 'Erro ao postar o tweet: Request failed with code 429' || data.message === 'Erro ao postar tweet:Request failed with code 429'){
                    OffLoadingScreen();
                    alert("Limite de Cutucadas por dia atingido! Espere para poder cutucar novamente.");
                } else {
                    OffLoadingScreen();
                    alert(data.message);
                }
            }
        } catch (error) {
            OffLoadingScreen();
            alert('Erro: ' + error.message);
        }

        OffLoadingScreen();
    });

    function previewMedia() {
        const fileInput = document.getElementById('mediaFile');
        const previewContainer = document.getElementById('media-preview');

        // Limpa o preview anterior e adiciona o bot√£o de limpar input
        previewContainer.innerHTML = '';
        previewContainer.innerHTML += `
        <div id="media-preview-closebtn" class="media-preview-closebtn">
            <label for="clearMidiaInput" style="cursor: url('/img/cursor-mao.png'), auto;">
                <?xml version="1.0" encoding="utf-8"?><!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->
                <svg width="36px" height="36px" viewBox="0 0 24 24" fill="#1D9BF0" xmlns="http://www.w3.org/2000/svg">
                    <circle opacity="0.5" cx="12" cy="12" r="8" stroke="#1C274C" stroke-width="1.5"/>
                    <path d="M14.5 9.50002L9.5 14.5M9.49998 9.5L14.5 14.5" stroke="#1C274C" stroke-width="1.5" stroke-linecap="round"/>
                </svg>
            </label>
            <button id="clearMidiaInput" style="display: none;" onclick="event.preventDefault(), clearMidiaInput()"></button>
        </div>
        `

        if (fileInput.files && fileInput.files[0]) {
            const file = fileInput.files[0];
            const fileType = file.type;

            // Verifica o tipo do arquivo
            if (fileType.startsWith('image/')) {
                const img = document.createElement('img');
                img.src = URL.createObjectURL(file);
                previewContainer.appendChild(img);
            } else if (fileType.startsWith('video/')) {
                const video = document.createElement('video');
                video.src = URL.createObjectURL(file);
                video.controls = true;
                previewContainer.appendChild(video);
            } else {
                previewContainer.textContent = 'Formato de arquivo n√£o suportado.';
            }
        }
    }

    function clearMidiaInput() {
        document.getElementById('mediaFile').value = '';
        disableBrat();

        if (document.getElementById('media-preview-closebtn') !== null){
            const mediaPreviewCloseBtn = document.getElementById('media-preview-closebtn');
            mediaPreviewCloseBtn.innerHTML = '';
        }

        // Limpa o preview anterior
        const previewContainer = document.getElementById('media-preview');
        previewContainer.innerHTML = '';
        
    }

    function clearMessageTextInput() {
        document.getElementById('messageText').value = '';
    }

    function clearMentionInput() {
        document.getElementById('mention').value = '';
    }

    // Contador de caracteres do post
    document.getElementById("messageText").addEventListener("input", function() {
        var maxLength = 220; // Limite de caracteres
        var currentLength = this.value.length;

        // Atualiza o contador para mostrar "x/220"
        document.getElementById("char-count-text").textContent = `${currentLength}/${maxLength}`;

        // Se o limite for alcan√ßado, desabilitar mais entradas
        if (currentLength >= maxLength) {
            this.value = this.value.substring(0, maxLength); // Impede mais caracteres
        }
    });

    // Filtrar e mostrar sugest√µes
    mentionInput.addEventListener('input', () => {
        const query = mentionInput.value.toLowerCase();
        suggestionsDiv.innerHTML = ''; // Limpar sugest√µes anteriores

        if (query.startsWith('@')) {
            const filteredSuggestions = suggestionsList.filter(item =>
                item.toLowerCase().startsWith(query)
            );

            // Exibir sugest√µes, se houver correspond√™ncias
            if (filteredSuggestions.length > 0) {
                suggestionsDiv.style.display = 'block';
                filteredSuggestions.forEach(suggestion => {
                    const suggestionDiv = document.createElement('div');
                    suggestionDiv.textContent = suggestion;

                    // Selecionar a sugest√£o ao clicar
                    suggestionDiv.addEventListener('click', () => {
                        mentionInput.value = suggestion;
                        suggestionsDiv.style.display = 'none'; // Esconde sugest√µes
                    });

                    suggestionsDiv.appendChild(suggestionDiv);
                });
            } else {
                suggestionsDiv.style.display = 'none'; // Oculta se n√£o houver sugest√µes
            }
        } else {
            suggestionsDiv.style.display = 'none'; // Oculta se a entrada n√£o come√ßar com "@"
        }
    });

    // Esconder sugest√µes ao clicar fora do campo de texto
    document.addEventListener('click', event => {
        if (event.target !== mentionInput && event.target.parentNode !== suggestionsDiv) {
            suggestionsDiv.style.display = 'none';
        }
    }); 
</script>