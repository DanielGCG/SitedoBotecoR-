<main>
    <h2>Cutuque algu√©m!</h2>

    <div class="caixa-texto">
        <h4>Para cutucar no Twitter</h4>
        <h5>Use o @dapessoa e escreva uma mensagem ~an√¥nima!~</h5>
    </div>

    <div class="caixa-texto">
        <!-- Campo de texto para o @mencionado -->
        <input class="entrada-texto" type="text" id="mention" placeholder="Digite @marcado" autocomplete="off" />
        <!-- Div para mostrar sugest√µes -->
        <div id="suggestions" class="suggestions"></div>
    
        <!-- Campo de texto para escrever a mensagem -->
        <textarea class="entrada-texto-grande" id="messageText" placeholder="Escreva o resto da mensagem..."></textarea>

        <div class="upload-container">
            <label for="mediaFile" class="branco">
                <span>üì§ Upload de M√≠dia</span>
            </label>
            <input type="file" id="mediaFile" accept="image/*,video/*" style="display: none;" />
            <span id="fileName" class="file-name"></span>
        </div>
        
    
        <!-- Bot√£o para enviar o tweet -->
        <button id="tweetButton">Postar Tweet</button>
    </div>     

    <div class="post-twitter"></div>

    <!-- Popup para exibir a imagem com fundo desfocado e bot√µes -->
    <div id="popup-senha" class="popup">
        <div id="popup-conteudo" class="popup-conteudo">
            <div class="acoes">
                <form id="passwordForm">
                    <h2>Autentica√ß√£o de Usu√°rio</h2>
                    <input type="password" id="password" placeholder="Digite a senha" />
                    <button onclick="event.preventDefault(), checkPassword()">Verificar</button>
                    <p class="message" id="message"></p>
                </form>
            </div>
        </div>
    </div>
</main>

<link rel="stylesheet" href="/geral/popup.css">
<link rel="stylesheet" href="/pages/cutucar/style.css">

<script>
    const suggestionsList = [
        '@botdoboteco',
        '@Bagriieeel',
        '@carollssssssss',
        '@chammittoo',
        '@Darksols_',
        '@elonmusk',
        '@f3rnandesz',
        '@GabrielXoxota',
        '@Gb_santos1811',
        '@gcg_daniel',
        '@giapropria',
        '@girlon_tv',
        '@i2camacho',
        '@jairbolsonaro',
        '@JYPETWICE',
        '@jogadorStick',
        '@lbbhangelita',
        '@Liraotrem',
        '@LulaOficial',
        '@oleonamjoao',
        '@palettelilith',
        '@Regis_trado18',
        '@snake_sorrel',
        '@Tal_Lento',
        '@taylorswift13',
        '@whoisnenes',
        '@yuzzu_94'
    ];

    document.addEventListener("DOMContentLoaded", () => {
        validacaoUsuario = localStorage.getItem("validacaoUsuario");
        if (validacaoUsuario !== null) {
            validacaoUsuario = JSON.parse(validacaoUsuario); // Converte para booleano ou outro tipo armazenado.
        } else {
            validacaoUsuario = false; // Valor padr√£o se n√£o existir no localStorage.
        }

        console.log("Valida√ß√£o do Usu√°rio:", validacaoUsuario);

        if (validacaoUsuario === true){
            document.getElementById("popup-senha").style.display = "none";
        }
    });

    async function checkPassword() {
        const senha = document.getElementById("password").value; // Obter senha do input
        const response = await fetch('/verify-senha-cutucar', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ senha }) // Enviar senha como JSON
        });

        const data = await response.json(); // Converter a resposta para JSON

        if (data.success) {
            validacaoUsuario = true;
            localStorage.setItem("validacaoUsuario", validacaoUsuario = true);
            document.getElementById("popup-senha").style.display = "none";
        } else {
            console.log("Senha incorreta");
        }
    }

    const mentionInput = document.getElementById('mention');
    const suggestionsDiv = document.getElementById('suggestions');

    // Filtrar e mostrar sugest√µes
    mentionInput.addEventListener('input', () => {
        const query = mentionInput.value.toLowerCase();
        suggestionsDiv.innerHTML = ''; // Limpar sugest√µes anteriores

        if (query.startsWith('@')) {
            const filteredSuggestions = suggestionsList.filter(item =>
                item.toLowerCase().startsWith(query)
            );

            // Exibir sugest√µes, se houver correspond√™ncias
            if (filteredSuggestions.length > 0) {
                suggestionsDiv.style.display = 'block';
                filteredSuggestions.forEach(suggestion => {
                    const suggestionDiv = document.createElement('div');
                    suggestionDiv.textContent = suggestion;

                    // Selecionar a sugest√£o ao clicar
                    suggestionDiv.addEventListener('click', () => {
                        mentionInput.value = suggestion;
                        suggestionsDiv.style.display = 'none'; // Esconde sugest√µes
                    });

                    suggestionsDiv.appendChild(suggestionDiv);
                });
            } else {
                suggestionsDiv.style.display = 'none'; // Oculta se n√£o houver sugest√µes
            }
        } else {
            suggestionsDiv.style.display = 'none'; // Oculta se a entrada n√£o come√ßar com "@"
        }
    });

    // Esconder sugest√µes ao clicar fora do campo de texto
    document.addEventListener('click', event => {
        if (event.target !== mentionInput && event.target.parentNode !== suggestionsDiv) {
            suggestionsDiv.style.display = 'none';
        }
    });

    document.getElementById('mediaFile').addEventListener('change', (event) => {
        const fileNameSpan = document.getElementById('fileName');
        const file = event.target.files[0];

        fileNameSpan.textContent = file ? file.name : 'Nenhum arquivo selecionado';
    });

    // L√≥gica para envio de tweet
    document.getElementById('tweetButton').addEventListener('click', async () => {
        if (validacaoUsuario !== true) {
            alert("Usu√°rio sem permiss√£o para envio de tweet");
            return false;
        }

        const mention = mentionInput.value.trim();
        const messageText = document.getElementById('messageText').value.trim();
        const mediaFile = document.getElementById('mediaFile').files[0];

        if (!mention || !messageText) {
            alert('Por favor, preencha ambos os campos.');
            return;
        }

        const tweetText = `‚òù${mention}, ${messageText}



üîóhttps://www.boteco.live/cutucar`;

        const formData = new FormData();
        formData.append('text', tweetText);

        if (mediaFile) {
            formData.append('media', mediaFile); // Adicionar m√≠dia somente se for enviada
        }

        try {
            const response = await fetch('/tweet-media', {
                method: 'POST',
                body: formData,
            });
            
            const data = await response.json();

            if (data.status === 429) {
                alert('Limite de requisi√ß√µes atingido. Por favor, tente novamente mais tarde.');
                return;
            }

            if (data.success) {
                alert('Tweet enviado com sucesso!');
                document.getElementById('messageText').value = '';
                document.getElementById('mention').value = '';
                document.getElementById('mediaFile').value = '';
            } else {
                if (data.message === 'Erro ao postar o tweet: Request failed with code 429' || data.message === 'Erro ao postar tweet:Request failed with code 429'){
                    alert("Limite de Cutucadas por dia atingido! Espere para poder cutucar novamente.");
                }
                else{
                    alert(data.message);
                }
            }
    } catch (error) {
        alert('Erro: ' + error.message);
    }
});
</script>