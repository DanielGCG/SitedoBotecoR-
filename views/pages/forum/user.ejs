<head>
    <link rel="stylesheet" href="/pages/forum/style/forum.css">
    <link rel="stylesheet" href="/pages/forum/style/user.css">
</head>
<body>
      <section class="userpage-userbox" id="userpage-userbox">
        <div class="userpage-userinfo">
        </div>
      </section>
      <section class="userpage-main-layout">
        <!-- Lado esquerdo (posts) -->
        <div class="userpage-main-right">
          <h2 style="text-align: center; font-size: 14px; margin: 10px;">Publica√ß√µes</h2>
          <div class="discussoes" id="publicacoes">
          </div>
        </div>
        <!-- Lado direito (biografia) -->
        <div class="userpage-main-left">
          <h2 style="text-align: center; font-size: 14px; margin: 10px;">Biografia</h2>
          <div class="left-sided-userarea" id="biografia">
          </div>
          <h2 style="text-align: center; font-size: 14px; margin: 10px;">Amizades</h2>
          <div class="left-sided-userarea" id="amizades">
          </div>
        </div>
      </section>
    </main>
  </div>
</body>

<script>
async function followUser(userId) {
  const userIdRequester = localStorage.getItem("autenticationUserId");

  try {
    const response = await fetch('/API/forum/followuser', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ userIdRequester, userId  }),
    });

    if (!response.ok) {
      const errorData = await response.json();
      console.error('Erro ao seguir usu√°rio:', errorData.error);
      alert(`Erro: ${errorData.error}`);
      return;
    }

    const data = await response.json();

    // Alterar bot√£o para "Unfollow"
    const button = document.getElementById('follow-button');
    if (button) {
      button.id = 'unfollow-button';
      button.textContent = 'Unfollow';
      button.setAttribute('onclick', `unfollowUser('${userId}')`);
    }
  } catch (error) {
    console.error('Erro ao processar os dados:', error);
    alert('Ocorreu um erro ao seguir o usu√°rio. Tente novamente mais tarde.');
  }
}

async function unfollowUser(userId) {
  const userIdRequester = localStorage.getItem("autenticationUserId");

  try {
    const response = await fetch('/API/forum/unfollowuser', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ userIdRequester, userId }),
    });

    if (!response.ok) {
      const errorData = await response.json();
      console.error('Erro ao deixar de seguir usu√°rio:', errorData.error);
      alert(`Erro: ${errorData.error}`);
      return;
    }

    const data = await response.json();

    // Alterar bot√£o para "Follow"
    const button = document.getElementById('unfollow-button');
    if (button) {
      button.id = 'follow-button';
      button.textContent = 'Follow';
      button.setAttribute('onclick', `followUser('${userId}')`);
    }

  } catch (error) {
    console.error('Erro ao processar os dados:', error);
    alert('Ocorreu um erro ao deixar de seguir o usu√°rio. Tente novamente mais tarde.');
  }
}

function renderUserBox(user) {
  const userpageUserbox = document.getElementById("userpage-userbox");
  const userIdRequester = localStorage.getItem("autenticationUserId");
  const isAuthenticatedUser = user.userId === userIdRequester;

  // Verificar se `followersList` √© v√°lido
  const isFollowing = Array.isArray(user.followersList) && user.followersList.includes(userIdRequester);

  // Template comum para exibir informa√ß√µes do usu√°rio
  const userInfoTemplate = `
    <div class="userpage-userinfo">
      <div class="userpage-userinfo-image">
        <img src="${user.profileImage}" alt="${user.exibitionName}">
      </div>
      <div class="userpage-userinfo-name">
        <h3>${user.exibitionName}</h3>
        <p>${user.userTag}</p>
        <p style="margin-top: 5px;">${user.pronouns}</p>
        <p style="margin-top: 5px;">${user.discussaoAmount} üó£ | ${user.friendAmount} üë•</p>
      </div>
    </div>
  `;

  // A√ß√µes espec√≠ficas para cada caso
  let actionsTemplate = "";

  if (isAuthenticatedUser) {
    actionsTemplate = `
      <div class="userpage-userbox-actions">
        <button id="edit-button" onclick="window.location.href='/forum/editar'">Editar</button>
      </div>
    `;
  } else if (isFollowing) {
    actionsTemplate = `
      <div class="userpage-userbox-actions">
        <button id="unfollow-button" onclick="unfollowUser('${user.userId}')">Unfollow</button>
      </div>
    `;
  } else {
    actionsTemplate = `
      <div class="userpage-userbox-actions">
        <button id="follow-button" onclick="followUser('${user.userId}')">Follow</button>
      </div>
    `;
  }

  // Renderizar o conte√∫do
  userpageUserbox.innerHTML = `
    ${userInfoTemplate}
    ${actionsTemplate}
  `;

  // Definir a imagem de fundo
  userpageUserbox.style.backgroundImage = `url(${user.bannerImage})`;
}

function renderBiografia(user) {
  const biografiaContainer = document.getElementById("biografia");

  if (user.biography) {
    const formattedBiography = user.biography.replace(/\n/g, '<br>');
    biografiaContainer.innerHTML = `
      <div class="biografia-text">
          <p>${formattedBiography}</p>
      </div>`;
  } else {
    biografiaContainer.innerHTML = `
      <div class="biografia-text">
          <p>Tenho pregui√ßa demais para escrever uma biografia :P</p>
      </div>`;
  }
}

async function renderAmizades(user) {
  const amizadesContainer = document.getElementById("amizades");
  try {
    const response = await fetch('/API/forum/getuserfriendlist', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      
      body: JSON.stringify({ userId: user.userId }),
    });

    if (!response.ok) {
      const errorData = await response.json();
      console.error('Erro ao obter lista de amigos:', errorData.error);
      amizadesContainer.innerHTML = `
        <div class="amizades-info">
            <p>Erro ao carregar amigos.</p>
        </div>`;
      return;
    }

    const data = await response.json();
    const friendList = data.listadeamigosTag;

    if (friendList.length > 0) {
      let lista = ''; // Vari√°vel para armazenar a lista de amigos

      // Cria um item de lista para cada amigo
      friendList.forEach(friend => {
        lista += ` <a href='/forum/user?userTag=${friend}' style="text-decoration: none; color: #333;">${friend} </a> `; // Adiciona o nome do amigo (ou o que for relevante) √† lista
      });

      amizadesContainer.innerHTML = `
        <div class="amizades-info">
            ${lista} <!-- Renderiza a lista de amigos -->
        </div>`;
    } else {
      amizadesContainer.innerHTML = `
        <div class="amizades-info">
            <p>Nem tem amigos ainda XD</p>
        </div>`;
    }
  } catch (error) {
    console.error('Erro ao processar os dados:', error);
    amizadesContainer.innerHTML = `
      <div class="amizades-info">
          <p>Erro ao carregar amigos.</p>
      </div>`;
  }
}

function renderPublicacoes(publicacoes) {
    const publicacoesDiv = document.getElementById('publicacoes');
    publicacoesDiv.innerHTML = '';

    if (!publicacoes || Object.keys(publicacoes).length === 0) {
      publicacoesDiv.innerHTML = `
        <div>
          <h2>Ainda n√£o publicou nada :P melhore!</h2>
        </div>
      `;
      return;
    }

    // Converter objeto em array
    const publicacoesArray = Object.values(publicacoes);

    publicacoesArray.forEach(publicacao => {
      const publicacaoDiv = document.createElement('div');
      publicacaoDiv.classList.add('publicacao');

      const ultimaAtualizacao = new Date(publicacao.time);
      const tempoFormatado = `${ultimaAtualizacao.toLocaleDateString()} ${ultimaAtualizacao.toLocaleTimeString()}`;

      if (publicacao.userId === localStorage.getItem("autenticationUserId")) {
        if (publicacao.type === "discussao") {
          publicacaoDiv.innerHTML = `
            <div>
              <h3 class="discussao-title">
                <a href="/forum/discussao?publicacaoId=${publicacao.publicacaoId}">${publicacao.discussaoTitle}</a>
              </h3>
              <p class="discussao-info">
                </a>${publicacao.commentAmount} respostas
              </p>
            </div>
            <div>
              <p class="discussao-info">${tempoFormatado}</p>
              <button id="remover-discussao" onclick="deletaDiscussao('${publicacao.publicacaoId}', '${publicacao.userId}')">Remover</button>
            </div>
          `;
        }
        if (publicacao.type === "post") {
          publicacaoDiv.innerHTML = `<div><h1>Post</h1></div>`; 
        }
        if (publicacao.type === "thread") {
          publicacaoDiv.innerHTML = `<div><h1>Thread</h1></div>`; 
        }
      } else {
        if (publicacao.type === "discussao") {
          publicacaoDiv.innerHTML = `
            <div>
              <h3 class="discussao-title">
                <a href="/forum/discussao?publicacaoId=${publicacao.publicacaoId}">${publicacao.discussaoTitle}</a>
              </h3>
              <p class="discussao-info">
                </a>${publicacao.commentAmount} respostas
              </p>
            </div>
            <div>
              <p class="discussao-info">${tempoFormatado}</p>
            </div>
          `;
        }
        if (publicacao.type === "post") {
          publicacaoDiv.innerHTML = `<div><h1>Post</h1></div>`; 
        }
        if (publicacao.type === "thread") {
          publicacaoDiv.innerHTML = `<div><h1>Thread</h1></div>`; 
        }
      }

      // Adiciona o novo t√≥pico √† lista
      publicacoesDiv.appendChild(publicacaoDiv);
    });
}

async function deletaDiscussao(publicacaoId, userId) {
  try {
      const response = await fetch(`/API/forum/removerdiscussao`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ userId, publicacaoId }),
      });

      const responseData = await response.json();
      if (response.ok) {
      }

    }catch (error) {
    console.error('Erro ao salvar no Firebase:', error);
    res.status(500).json({ error: 'Erro interno do servidor.' });
  }
}

function searchUserData(userTag) {
    if (!userTag) {
        console.error('precisamos da userTag do usu√°rio para localiza-lo.');
        alert('Precisamos da userTag do usu√°rio para localiza-lo.');
        return;
    }

    // Conectar ao servidor de mensagens com par√¢metros na URL
    const eventSource = new EventSource(`/API/forum/stream-user?userTag=${userTag}`);

    eventSource.onmessage = (event) => {
        try {
            userData = JSON.parse(event.data);
            renderAmizades(userData);
            renderBiografia(userData);
            renderUserBox(userData);
            searchUserPublicacoes(userData.userId);
        } catch (error) {
            console.error('Erro ao processar os dados recebidos:', error);
        }
    };

    eventSource.onerror = (error) => {
        console.error('Erro na conex√£o com o servidor:', error);
        eventSource.close();
    };
}

function searchUserPublicacoes(userId) {
    if (!userId) {
        console.error('precisamos do userId localiza-lo.');
        alert('Voc√™ precisa estar logado!');
        return;
    }

    // Conectar ao servidor de mensagens com par√¢metros na URL
    const eventSource = new EventSource(`/API/forum/stream-publicacoesbyuserid?userId=${userId}`);


    eventSource.onmessage = (event) => {
        try {
          userPublicacoes = JSON.parse(event.data);
          renderPublicacoes(userPublicacoes);
        } catch (error) {
            console.error('Erro ao processar os dados recebidos:', error);
        }
    };

    eventSource.onerror = (error) => {
        console.error('Erro na conex√£o com o servidor:', error);
        eventSource.close();
    };
}

let userData;

window.onload = () => {
    // Recuperando os par√¢metros da URL
    const urlParams = new URLSearchParams(window.location.search);
    userTag = urlParams.get('userTag');

    // Atribuindo os valores recuperados nas vari√°veis globais
    searchUserData(userTag);
}
</script>