<head>
    <link rel="stylesheet" href="/pages/forum/style/forum.css">
    <link rel="stylesheet" href="/pages/forum/style/user.css">
</head>
<body>
      <section class="userpage-userbox" id="userpage-userbox">
        <div class="userpage-userinfo">
        </div>
      </section>
      <section class="userpage-main-layout">
        <!-- Lado esquerdo (posts) -->
        <div class="userpage-main-right">
          <h2 style="text-align: center; font-size: 14px; margin: 10px;">Discussões</h2>
          <div class="threads" id="threads">
          </div>
        </div>
        <!-- Lado direito (biografia) -->
        <div class="userpage-main-left">
          <h2 style="text-align: center; font-size: 14px; margin: 10px;">Biografia</h2>
          <div class="biografia" id="biografia">
          </div>
        </div>
      </section>
    </main>
  </div>
</body>

<script>
function renderUserBox(user) {
    const userpageUserbox = document.getElementById("userpage-userbox");
    if(user.userTag === localStorage.getItem("autenticationUserTag")){
      userpageUserbox.innerHTML =
      `<div class="userpage-userinfo">
          <div class="userpage-userinfo-image">
            <img src="${user.profileImage}">
          </div>
          <div class="userpage-userinfo-name">
            <h3>${user.exibitionName}</h3>
            <p>${user.userTag}</p>
            <p style="margin-top: 5px;">${user.pronouns}</p>
          </div>
        </div>
        <div class="userpage-userbox-actions">
          <div class="userpage-userbox-actions">
            <button id="edit-button" onclick="window.location.href='/forum/editar'">Editar</button>
          </div>          
        </div>
      </div>
      `;
    }
    else{
      userpageUserbox.innerHTML =
      `<div class="userpage-userinfo">
          <div class="userpage-userinfo-image">
            <img src="${user.profileImage}">
          </div>
          <div class="userpage-userinfo-name">
            <h3>${user.exibitionName}</h3>
            <p>${user.userTag}</p>
            <p style="margin-top: 5px;">${user.pronouns}</p>
          </div>
        </div>
        <div class="userpage-userbox-actions">
          <div class="userpage-userbox-actions">
            <button id="follow-button">Follow</button>
          </div>          
        </div>
      </div>
      `;
    }
    

    // Definindo o background-image corretamente
    userpageUserbox.style.backgroundImage = `url(${user.bannerImage})`;
}

function renderBiografia(user) {
  const biografiaContainer = document.getElementById("biografia");

  if (user.biography) {
    const formattedBiography = user.biography.replace(/\n/g, '<br>');
    biografiaContainer.innerHTML = `
      <div class="biografia-text">
          <p>${formattedBiography}</p>
      </div>`;
  } else {
    biografiaContainer.innerHTML = `
      <div class="biografia-text">
          <p>Tenho preguiça demais para escrever uma biografia :P</p>
      </div>`;
  }
}

function renderDiscussoes(discussoes) {
    const threadsDiv = document.getElementById('threads');
    threadsDiv.innerHTML = '';

    // Verificar se discussoes é um array
    if (!Array.isArray(discussoes) || discussoes.length === 0) {
        threadsDiv.innerHTML = `
            <div>
                <h3 style="text-align: center;">Ainda criou uma discussão! D:<</h3>
            </div>
        `;
        return;
    }

    // Percorrer as discussões
    discussoes.forEach(discussao => {
        const threadDiv = document.createElement('div');
        threadDiv.classList.add('thread');

        const ultimaAtualizacao = new Date(discussao.ultimoUpdate);
        const tempoFormatado = `${ultimaAtualizacao.toLocaleDateString()} ${ultimaAtualizacao.toLocaleTimeString()}`;

        if (discussao.userTag === localStorage.getItem("autenticationUserTag")){
        threadDiv.innerHTML = `
        <div>
          <h3 class="thread-title"><a href="/forum/discussao?categoria=${discussao.categoria}&discussao=${discussao.discussao}">${discussao.discussao}</a></h3>
          <p class="thread-info">Por <a href="/forum/user?userTag=${discussao.userTag}"><strong>${discussao.userTag}</strong></a> - ${discussao.postAmount} respostas</p>
        </div>
        <div style="display: flex; flex-direction: column; align-items: flex-start; justify-content: space-between; height: 100%;">
          <p class="thread-info" >último post ${tempoFormatado}</p>
          <button id="remover-discussao" onclick="deletaDiscussao('${discussao.categoria}', '${discussao.discussao}', '${discussao.userTag}')">Remover</button>
        </div>
        `;
      }
      else {
        threadDiv.innerHTML = `
        <div>
          <h3 class="thread-title"><a href="/forum/discussao?categoria=${discussao.categoria}&discussao=${discussao.discussao}">${discussao.discussao}</a></h3>
          <p class="thread-info">Por <a href="/forum/user?userTag=${discussao.userTag}"><strong>${discussao.userTag}</strong></a> - ${discussao.postAmount} respostas</p>
        </div>
        <div>
          <p class="thread-info">último post ${tempoFormatado}</p>
        </div>
      `;
      }

        threadsDiv.appendChild(threadDiv);
    });
}

function searchUserData() {
    if (!userTag) {
        console.error('precisamos do email do usuário para localiza-lo.');
        alert('precisamos do email do usuário para localiza-lo.');
        return;
    }

    // Conectar ao servidor de mensagens com parâmetros na URL
    const eventSource = new EventSource(`/stream-user?userTag=${userTag}`);

    eventSource.onmessage = (event) => {
        try {
            userData = JSON.parse(event.data);
            renderBiografia(userData);
            renderUserBox(userData); // Renderiza as discussões recebidas
        } catch (error) {
            console.error('Erro ao processar os dados recebidos:', error);
        }
    };

    eventSource.onerror = (error) => {
        console.error('Erro na conexão com o servidor:', error);
        eventSource.close();
    };
}

function searchUserDiscussoes() {
    if (!userTag) {
        console.error('precisamos do email do usuário para localiza-lo.');
        alert('precisamos do email do usuário para localiza-lo.');
        return;
    }

    // Conectar ao servidor de mensagens com parâmetros na URL
    const eventSource = new EventSource(`/stream-discussoes?userTag=${userTag}`);

    eventSource.onmessage = (event) => {
        try {
          userDiscussoes = JSON.parse(event.data);
          renderDiscussoes(userDiscussoes);
        } catch (error) {
            console.error('Erro ao processar os dados recebidos:', error);
        }
    };

    eventSource.onerror = (error) => {
        console.error('Erro na conexão com o servidor:', error);
        eventSource.close();
    };
}

let userTag;
let userData;
let userDiscussoes;

window.onload = () => {
    // Recuperando os parâmetros da URL
    const urlParams = new URLSearchParams(window.location.search);
    userTag = urlParams.get('userTag');

    // Atribuindo os valores recuperados nas variáveis globais
    searchUserData();
    searchUserDiscussoes();
}
</script>