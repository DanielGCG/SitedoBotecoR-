<main>
    <h2>Imagem do Dia</h2>
    <!-- Caixa de texto bonitinha -->
    <div class="caixa-texto">
        <h4>Dê uma olhada na Galeria!</h4>
        <h5>ou então na WatchList :)</h5>
    </div>

    <div class="imagem-do-dia">
        <div class="imagem">
            <img src="" alt=""> <!-- A imagem será carregada dinamicamente -->
            <div class="plaquinha">
                <a href="" style="color: #333; text-decoration: none; cursor: url('/img/cursor-mao.png'), auto;">
                    <!-- O nome será preenchido dinamicamente -->
                </a>
            </div>
        </div>
    </div>

    <div class="caixa-texto">
        <h5>Quer sugerir imagem do dia?</h5>
        <a class="branco" id="editarNomeBtn" href="/sugerir">Sugerir</a>
    </div>
</main>

<link rel="stylesheet" href="/css/galeria.css">

<style>
    main {
        text-align: center;
    }

    .imagem-container {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 10px;
    }

    .imagem {
        background-image: url('/img/moldura.png'); /* Imagem de fundo para a moldura */
        background-size: cover;
        background-position: center;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Efeito de sombra */
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        aspect-ratio: 1; /* Proporção quadrada */
        width: 100%; /* Ajusta a largura para o tamanho do contêiner */
        max-width: 550px; /* Limita a largura máxima */
        margin: auto; /* Centraliza horizontalmente */
        position: relative; /* Necessário para posicionar a plaquinha */
    }

    .imagem img {
        width: 87%; /* Tamanho da imagem principal */
        height: 87%; /* Mantém a proporção da imagem */
        object-fit: cover;
    }

    .imagem img {
        cursor: url('/img/cursor.png'), auto;
    }

    .branco {
        display: inline-block; /* Necessário para comportar margens como um botão */
        padding: 10px 20px;
        background-color: white; /* Branco */
        color: #333; /* Cor do texto */
        border: 1px solid #ccc; /* Borda clara */
        border-radius: 5px;
        text-decoration: none; /* Remove o sublinhado padrão dos links */
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .branco:hover {
        background-color: #f1f1f1; /* Tom mais claro no hover */
        cursor: url('/img/cursor-mao.png'), auto;
    }

    /* Ajustes para visualização em dispositivos móveis */
    @media (max-width: 768px) {
        .imagem {
            max-width: 3000px; /* Reduz o tamanho em dispositivos móveis */
        }
        .plaquinha {
            width: 80%; /* Ajusta a largura da plaquinha em dispositivos móveis */
            font-size: 12px; /* Reduz o tamanho da fonte para a plaquinha */
            height: 45px; /* Altura ajustada para a plaquinha */
        }
    }
</style>

<script type="module">
    import { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-storage.js";
    import { initializeApp } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-app.js";

    // Configuração do Firebase
    const firebaseConfig = {
        apiKey: "AIzaSyDuwnu2XcSTJ1YZkgD4570AtE6uKci_nDQ",
        authDomain: "boteco-6fcfa.firebaseapp.com",
        projectId: "boteco-6fcfa",
        storageBucket: "boteco-6fcfa.appspot.com",
        messagingSenderId: "531032694476",
        appId: "1:531032694476:web:6e03bdd824b90fd2b2ec69"
    }

    const app = initializeApp(firebaseConfig);
    const storage = getStorage(app);

    // Função para buscar a imagem do dia
    async function buscarImagemDoDia() {
        const pasta = "imagensdodia/"; // Pasta onde as imagens estão armazenadas
        const imagemRef = ref(storage, pasta);

        try {
            // Listar todos os arquivos na pasta imagensdodia
            const resultado = await listAll(imagemRef);
            const imagens = resultado.items;

            // Encontrar a imagem que começa com "imagemdodia"
            const imagemDoDia = imagens.find(imagem => imagem.name.startsWith("imagemdodia"));

            if (!imagemDoDia) {
                console.log("Nenhuma imagem do dia encontrada.");
                return;
            }

            // Obter URL de download da imagem
            const urlImagem = await getDownloadURL(imagemDoDia);

            // Extrair o nome da imagem (remover "imagemdodia" e a data)
            const nomeImagem = imagemDoDia.name.replace(/^imagemdodia-\d{4}-\d{2}-\d{2}T\d{2}-\d{2}-\d{2}.\d{3}Z-/, '').split('.').slice(0, -1).join('.');

            // Atualizar a página com a imagem e o nome
            document.querySelector('.imagem-do-dia img').src = urlImagem;
            document.querySelector('.plaquinha a').textContent = nomeImagem; // Exibe o nome na plaquinha
            document.querySelector('.plaquinha a').href = ``; // Atualiza o link, se necessário

        } catch (error) {
            console.error("Erro ao buscar a imagem do dia:", error);
        }
    }

    // Chama a função para buscar a imagem do dia ao carregar a página
    window.onload = buscarImagemDoDia;
</script>