<main>
    <h2>Sugira uma Imagem do Dia</h2>
    <!-- Caixa de texto bonitinha -->
    <div class="caixa-texto">
        <h4>Adicione uma imagem à fila</h4>
        <h5>Deixe também um texto para a plaquinha</h5>
    </div>

    <div class="caixa-texto">
        <!-- Campo de seleção de imagem -->
        <input type="file" id="imagem">
        
        <!-- Campo de texto para o nome -->
        <input class="entrada-texto" type="text" id="texto" placeholder="Texto da plaquinha" autocomplete="off" />
        
        <!-- Botão para adicionar ao Firebase -->
        <button class="branco" id="adicionarButton">Adicionar</button>
    </div>
</main>

<style>
    main {
        text-align: center;
        font-family: Arial, sans-serif;
    }

    .caixa-texto {
        margin: 20px auto;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    input {
        margin: 10px 0;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        width: 80%;
        max-width: 400px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .branco {
        padding: 10px 20px;
        background-color: white; /* Branco */
        color: #333; /* Cor do texto */
        border: 1px solid #ccc; /* Borda clara */
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .branco:hover {
        background-color: #f1f1f1; /* Tom mais claro no hover */
        cursor: url('/img/cursor-mao.png'), auto;
    }

    input[type="text"] {
        margin-top: 10px; /* Espaçamento superior para o botão */
        width: 80%; /* Largura ajustável */
        max-width: 400px; /* Limita a largura máxima */
        padding: 12px 20px; /* Espaçamento interno */
        font-size: 16px; /* Tamanho da fonte */
        border: 1px solid #ccc; /* Cor da borda */
        border-radius: 8px; /* Bordas arredondadas */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Sombra sutil */
        outline: none; /* Remove o outline padrão */
        transition: all 0.3s ease; /* Animação suave */
        opacity: 70%;
        margin-bottom: 20px; /* Adiciona espaçamento abaixo do input */
        cursor: url('/img/cursor-texto.png'), auto;
    }

    input[type="text"]:focus {
        border-color: #4caf50; /* Cor da borda ao focar */
        box-shadow: 0 4px 8px rgba(76, 175, 80, 0.4); /* Sombra mais destacada */
        opacity: 100%;
        cursor: url('/img/cursor-texto.png'), auto;
    }
</style>

<script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-app.js";
    import { getStorage, ref, uploadBytes } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-storage.js";

    // Configuração do Firebase
    const firebaseConfig = {
        apiKey: "AIzaSyDuwnu2XcSTJ1YZkgD4570AtE6uKci_nDQ",
        authDomain: "boteco-6fcfa.firebaseapp.com",
        projectId: "boteco-6fcfa",
        storageBucket: "boteco-6fcfa.appspot.com",
        messagingSenderId: "531032694476",
        appId: "1:531032694476:web:6e03bdd824b90fd2b2ec69"
    };

    // Inicialização do Firebase
    const app = initializeApp(firebaseConfig);
    const storage = getStorage(app);

    // Função para capturar data e hora atual no formato desejado
    function gerarNomeArquivo(texto) {
        const agora = new Date();
        const dataISO = agora.toISOString().replace(/:/g, '-'); // Substitui ":" por "-" no ISO
        const textoFormatado = texto.trim().replace(/\s+/g, '_').replace(/[^a-zA-Z0-9_-]/g, '');
        return `${dataISO}-${textoFormatado}.gif`;
    }

    // Manipulador do botão de envio
    document.getElementById("adicionarButton").addEventListener("click", async () => {
        const imagemInput = document.getElementById("imagem");
        const textoInput = document.getElementById("texto");

        // Validações
        if (!imagemInput.files[0]) {
            alert("Por favor, selecione uma imagem.");
            return;
        }
        if (!textoInput.value.trim()) {
            alert("Por favor, insira um texto para o nome do arquivo.");
            return;
        }

        const arquivo = imagemInput.files[0];
        const nomeArquivo = gerarNomeArquivo(textoInput.value.trim().replace(/[^a-zA-Z0-9]/g, "_"));

        // Referência no Firebase Storage
        const storageRef = ref(storage, `imagensdodia/${nomeArquivo}`);

        try {
            // Upload do arquivo
            await uploadBytes(storageRef, arquivo);
            alert("Imagem adicionada com sucesso!");

            // Limpar campos após sucesso
            imagemInput.value = "";
            textoInput.value = "";
        } catch (error) {
            console.error("Erro ao enviar imagem:", error);
            alert("Houve um erro ao adicionar a imagem. Tente novamente.");
        }
    });
</script>